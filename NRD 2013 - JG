{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import tree\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Jason\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3072: DtypeWarning: Columns (34,79,80,81,82,83,84) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>age</th>\n",
       "      <th>aweekend</th>\n",
       "      <th>died</th>\n",
       "      <th>discwt</th>\n",
       "      <th>dispuniform</th>\n",
       "      <th>dmonth</th>\n",
       "      <th>dqtr</th>\n",
       "      <th>drg</th>\n",
       "      <th>drgver</th>\n",
       "      <th>...</th>\n",
       "      <th>_Iage_group_1</th>\n",
       "      <th>_Iage_group_2</th>\n",
       "      <th>_Inew_cc_in_1</th>\n",
       "      <th>_Inew_cc_in_2</th>\n",
       "      <th>_Ipayer_2</th>\n",
       "      <th>_Ipayer_3</th>\n",
       "      <th>_Ipayer_4</th>\n",
       "      <th>_Izipinc_qr_2</th>\n",
       "      <th>_Izipinc_qr_3</th>\n",
       "      <th>_Izipinc_qr_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>89</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.071937</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>372</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>89</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.071937</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>853</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>89</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.071937</td>\n",
       "      <td>5.0</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>853</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.063669</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>330</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.919980</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>387</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94493</th>\n",
       "      <td>94493</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.669010</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>331</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94494</th>\n",
       "      <td>94494</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.669010</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>346</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94495</th>\n",
       "      <td>94495</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.669010</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>393</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94496</th>\n",
       "      <td>94496</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.863343</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>472</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94497</th>\n",
       "      <td>94497</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.771707</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>385</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>94498 rows × 362 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       index  age  aweekend  died    discwt  dispuniform  dmonth  dqtr  drg  \\\n",
       "0          0   89         1   0.0  1.071937          5.0       3     1  372   \n",
       "1          1   89         1   0.0  1.071937          1.0       6     2  853   \n",
       "2          2   89         0   0.0  1.071937          5.0       9     3  853   \n",
       "3          3   48         0   0.0  3.063669          1.0       6     2  330   \n",
       "4          4   65         0   0.0  1.919980          1.0       5     2  387   \n",
       "...      ...  ...       ...   ...       ...          ...     ...   ...  ...   \n",
       "94493  94493   44         0   0.0  1.669010          6.0       6     2  331   \n",
       "94494  94494   44         0   0.0  1.669010          1.0       8     3  346   \n",
       "94495  94495   44         0   0.0  1.669010          1.0       8     3  393   \n",
       "94496  94496   52         0   0.0  1.863343          1.0       2     1  472   \n",
       "94497  94497   72         1   0.0  1.771707          1.0       2     1  385   \n",
       "\n",
       "       drgver  ...  _Iage_group_1 _Iage_group_2 _Inew_cc_in_1 _Inew_cc_in_2  \\\n",
       "0          30  ...              0             1             0             1   \n",
       "1          30  ...              0             1             0             1   \n",
       "2          30  ...              0             1             1             0   \n",
       "3          30  ...              1             0             0             0   \n",
       "4          30  ...              0             1             0             0   \n",
       "...       ...  ...            ...           ...           ...           ...   \n",
       "94493      30  ...              1             0             0             0   \n",
       "94494      30  ...              1             0             0             0   \n",
       "94495      30  ...              1             0             0             0   \n",
       "94496      30  ...              1             0             0             1   \n",
       "94497      30  ...              0             1             1             0   \n",
       "\n",
       "      _Ipayer_2 _Ipayer_3 _Ipayer_4 _Izipinc_qr_2 _Izipinc_qr_3 _Izipinc_qr_4  \n",
       "0           0.0       0.0       0.0           0.0           0.0           1.0  \n",
       "1           0.0       0.0       0.0           0.0           0.0           1.0  \n",
       "2           0.0       0.0       0.0           0.0           0.0           1.0  \n",
       "3           1.0       0.0       0.0           0.0           1.0           0.0  \n",
       "4           0.0       0.0       0.0           1.0           0.0           0.0  \n",
       "...         ...       ...       ...           ...           ...           ...  \n",
       "94493       1.0       0.0       0.0           0.0           0.0           1.0  \n",
       "94494       1.0       0.0       0.0           0.0           0.0           1.0  \n",
       "94495       1.0       0.0       0.0           0.0           0.0           1.0  \n",
       "94496       0.0       0.0       0.0           0.0           0.0           0.0  \n",
       "94497       0.0       0.0       0.0           1.0           0.0           0.0  \n",
       "\n",
       "[94498 rows x 362 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# path = '/Users/aqian/Downloads/'\n",
    "# #path = 'M:/Edmund'\n",
    "# os.chdir(path)\n",
    "df = pd.read_csv(\"NRD 2013 (machine learning).csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Copy the dataframe\n",
    "df_copy = df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nrd_visitlink</th>\n",
       "      <th>ibd_index_hosp</th>\n",
       "      <th>ibd_readm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>00017u</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>00017u</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>00017u</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0004o5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>000dbz</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  nrd_visitlink  ibd_index_hosp ibd_readm\n",
       "0        00017u               1         1\n",
       "1        00017u               0         1\n",
       "2        00017u               0         1\n",
       "3        0004o5               1         0\n",
       "4        000dbz               1         1"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Recoding the ibd_readm outcome variable\n",
    "readm_set = set()\n",
    "for index, row in df_copy[['nrd_visitlink','ibd_readm']].iterrows():\n",
    "    if row[1] == 1:\n",
    "        readm_set.add(row[0])\n",
    "readm_list = list(readm_set)\n",
    "df_copy.loc[df_copy.nrd_visitlink.isin(readm_list), 'ibd_readm'] = '1'\n",
    "df_copy[['nrd_visitlink','ibd_index_hosp', 'ibd_readm']].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>age</th>\n",
       "      <th>aweekend</th>\n",
       "      <th>died</th>\n",
       "      <th>discwt</th>\n",
       "      <th>dispuniform</th>\n",
       "      <th>dmonth</th>\n",
       "      <th>dqtr</th>\n",
       "      <th>drg</th>\n",
       "      <th>drgver</th>\n",
       "      <th>...</th>\n",
       "      <th>_Iage_group_1</th>\n",
       "      <th>_Iage_group_2</th>\n",
       "      <th>_Inew_cc_in_1</th>\n",
       "      <th>_Inew_cc_in_2</th>\n",
       "      <th>_Ipayer_2</th>\n",
       "      <th>_Ipayer_3</th>\n",
       "      <th>_Ipayer_4</th>\n",
       "      <th>_Izipinc_qr_2</th>\n",
       "      <th>_Izipinc_qr_3</th>\n",
       "      <th>_Izipinc_qr_4</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ibd_readm</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27766</td>\n",
       "      <td>27778</td>\n",
       "      <td>27766</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>...</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27747</td>\n",
       "      <td>27747</td>\n",
       "      <td>27747</td>\n",
       "      <td>27371</td>\n",
       "      <td>27371</td>\n",
       "      <td>27371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19622</td>\n",
       "      <td>19624</td>\n",
       "      <td>19622</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>...</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19602</td>\n",
       "      <td>19602</td>\n",
       "      <td>19602</td>\n",
       "      <td>19314</td>\n",
       "      <td>19314</td>\n",
       "      <td>19314</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 361 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           index    age  aweekend   died  discwt  dispuniform  dmonth   dqtr  \\\n",
       "ibd_readm                                                                      \n",
       "0          27778  27778     27778  27766   27778        27766   27778  27778   \n",
       "1          19624  19624     19624  19622   19624        19622   19624  19624   \n",
       "\n",
       "             drg  drgver  ...  _Iage_group_1  _Iage_group_2  _Inew_cc_in_1  \\\n",
       "ibd_readm                 ...                                                \n",
       "0          27778   27778  ...          27778          27778          27778   \n",
       "1          19624   19624  ...          19624          19624          19624   \n",
       "\n",
       "           _Inew_cc_in_2  _Ipayer_2  _Ipayer_3  _Ipayer_4  _Izipinc_qr_2  \\\n",
       "ibd_readm                                                                  \n",
       "0                  27778      27747      27747      27747          27371   \n",
       "1                  19624      19602      19602      19602          19314   \n",
       "\n",
       "           _Izipinc_qr_3  _Izipinc_qr_4  \n",
       "ibd_readm                                \n",
       "0                  27371          27371  \n",
       "1                  19314          19314  \n",
       "\n",
       "[2 rows x 361 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Filter the data by index hospitalizations for ibd only\n",
    "\n",
    "df_index = df_copy.loc[df_copy[\"ibd_index_hosp\"] == 1, :]\n",
    "df_index\n",
    "df_index.groupby('ibd_readm').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['index' 'age' 'aweekend' 'died' 'discwt' 'dispuniform' 'dmonth' 'dqtr'\n",
      " 'drg' 'drgver' 'drg_nopoa' 'dx1' 'dx2' 'dx3' 'dx4' 'dx5' 'dx6' 'dx7'\n",
      " 'dx8' 'dx9' 'dx10' 'dx11' 'dx12' 'dx13' 'dx14' 'dx15' 'dx16' 'dx17'\n",
      " 'dx18' 'dx19' 'dx20' 'dx21' 'dx22' 'dx23' 'dx24' 'dx25' 'dxccs1' 'dxccs2'\n",
      " 'dxccs3' 'dxccs4' 'dxccs5' 'dxccs6' 'dxccs7' 'dxccs8' 'dxccs9' 'dxccs10'\n",
      " 'dxccs11' 'dxccs12' 'dxccs13' 'dxccs14' 'dxccs15' 'dxccs16' 'dxccs17'\n",
      " 'dxccs18' 'dxccs19' 'dxccs20' 'dxccs21' 'dxccs22' 'dxccs23' 'dxccs24'\n",
      " 'dxccs25' 'elective' 'female' 'hcup_ed' 'hosp_nrd' 'key_nrd' 'los' 'mdc'\n",
      " 'mdc_nopoa' 'nchronic' 'ndx' 'necode' 'npr' 'nrd_daystoevent'\n",
      " 'nrd_stratum' 'nrd_visitlink' 'orproc' 'pay1' 'pl_nchs' 'pr1' 'pr2' 'pr3'\n",
      " 'pr4' 'pr5' 'pr6' 'pr7' 'pr8' 'pr9' 'pr10' 'pr11' 'pr12' 'pr13' 'pr14'\n",
      " 'pr15' 'prccs1' 'prccs2' 'prccs3' 'prccs4' 'prccs5' 'prccs6' 'prccs7'\n",
      " 'prccs8' 'prccs9' 'prccs10' 'prccs11' 'prccs12' 'prccs13' 'prccs14'\n",
      " 'prccs15' 'rehabtransfer' 'resident' 'samedayevent' 'totchg' 'year'\n",
      " 'zipinc_qrtl' 'aprdrg' 'aprdrg_risk_mortality' 'aprdrg_severity'\n",
      " 'cm_aids' 'cm_alcohol' 'cm_anemdef' 'cm_arth' 'cm_bldloss' 'cm_chf'\n",
      " 'cm_chrnlung' 'cm_coag' 'cm_depress' 'cm_dm' 'cm_dmcx' 'cm_drug'\n",
      " 'cm_htn_c' 'cm_hypothy' 'cm_liver' 'cm_lymph' 'cm_lytes' 'cm_mets'\n",
      " 'cm_neuro' 'cm_obese' 'cm_para' 'cm_perivasc' 'cm_psych' 'cm_pulmcirc'\n",
      " 'cm_renlfail' 'cm_tumor' 'cm_ulcer' 'cm_valve' 'cm_wghtloss' 'diabetes'\n",
      " 'copd' 'cm_smoking' 'ibd_dx_index' 'crohn_index' 'hosp_bedsize'\n",
      " 'h_contrl' 'hosp_urcat4' 'hosp_ur_teach' 'n_disc_u' 'n_hosp_u' 's_disc_u'\n",
      " 's_hosp_u' 'total_disc' 'hosp_urban_rural_location' 'payer' 'ccr_nrd'\n",
      " 'wageindex' '_merge' 'inpt_charges' 'ibd' 'ibd_flag' 'total_adm_num'\n",
      " 'ibd_adm_num' 'ibd_adm_total' 'ibd_index_hosp' 'ibd_index_six_months'\n",
      " 'ibd_index_death' 'ibd_index_after_june' 'ibd_index_flag_exclude'\n",
      " 'ibd_min_dmonth' 'ibd_total_los' 'dmonth_dead' 'dmonth_dead_fu'\n",
      " 'ibd_fu_v1' 'ibd_fu_v2' 'ibd_alive_fu' 'before_ibd_index_adm'\n",
      " 'total_before_ibd_index' 'before_ibd_index' 'ibdtotaladm_from_index'\n",
      " 'ibdtotlos_alive_fu' 'ibdtotadm_alive_fu' 'ibd_total_charges'\n",
      " 'ibdtotcharges_alive_fu' 'age_group' 'young_quintile'\n",
      " 'young_quintile_flag' 'sum_young' 'middle_quintile'\n",
      " 'middle_quintile_flag' 'sum_middle' 'old_quintile' 'old_quintile_flag'\n",
      " 'sum_old' 'ibd_young_quartile' 'ibd_middle_quartile' 'ibd_old_quartile'\n",
      " 'tot_ibd_death' 'gi_or_hepatic_proc_index' 'blood_transfusion'\n",
      " 'parenteral_or_enteral_index' 'ibd_procedures' 'tot_gi_or_hepatic_proc'\n",
      " 'max_nrd_daystoevent' 'ibd_max_daystoevent' 'ibd_readm' 'ibd_tot_readm'\n",
      " 'ibd_net_readm' 'ibd_colostomy_adm' 'tot_colostomy_adm'\n",
      " 'ibd_ileostomy_adm' 'tot_ileoostomy_adm' 'ibd_smallbowelresect_adm'\n",
      " 'tot_smallbowelresect_adm' 'ibd_colonresect_adm' 'tot_colonresect_adm'\n",
      " 'ibd_localexcise_adm' 'tot_localexcise_adm' 'ibd_exlap_adm'\n",
      " 'tot_exlap_adm' 'ibd_lysis_adm' 'tot_lysis_adm' 'tot_blood_transfusion'\n",
      " 'tot_parenteral_or_enteral' 'tot_ibd_procedures' 'cc_mi' 'cc_chf'\n",
      " 'cc_pervasc' 'cc_cvd' 'cc_dementia' 'cc_pulm' 'cc_rheumatic' 'cc_pud'\n",
      " 'cc_mild_liver' 'cc_dm_wocomp' 'cc_dm_w_comp' 'cc_hemi_or_para'\n",
      " 'cc_renal' 'cc_malignancy' 'cc_mod_severe_liver' 'cc_met_solidtumor'\n",
      " 'cc_aids_hiv' 'cc_index' 'new_cc_index' 'fractures' 'thromboses'\n",
      " 'tot_thromboses' 'unplanned_adm' 'tot_unplanned' 'pq1_dm_short'\n",
      " 'pq2_perf_appendix' 'pq3_dm_long' 'pq5_copd_asthma' 'pq7_htn' 'cardiac'\n",
      " 'pq8_chf' 'pq10_dehydrate' 'pq11_bacterialpna' 'pq12_uti' 'pq13_angina'\n",
      " 'pq14_diabeteswocomp' 'pq15_asthma' 'pq16_dm_amputate' 'dm'\n",
      " 'top_quintile_flag' 'ibd_young_quintile' 'ibd_middle_quintile'\n",
      " 'ibd_old_quintile' 'dibd_young_quintile' 'dibd_middle_quintile'\n",
      " 'dibd_old_quintile' 'top_ibd' 'top_decile_ibd' 'new_mi_adm' 'new_chf_adm'\n",
      " 'new_unstableangina_adm' 'new_arrhythmia_adm' 'new_cardiacarrest_adm'\n",
      " 'new_meningitis_adm' 'new_encephalitis_adm' 'new_endocarditis_adm'\n",
      " 'new_pneumonia_adm' 'new_pyelonephritis_adm' 'new_osteo_adm'\n",
      " 'new_septicemia_adm' 'new_cdiff_adm' 'new_tb_adm' 'new_atypicalmyco_adm'\n",
      " 'new_fungal_adm' 'new_listeriosis_adm' 'new_leishmaniasis_adm'\n",
      " 'new_pcp_adm' 'chronic_pain' 'ibd_surgery_adm' 'tot_surgery_adm'\n",
      " 'tot_pq1' 'tot_pq2' 'tot_pq3' 'frailty_risk_score'\n",
      " 'frailty_risk_category' 'frailty_risk_category_index' 'prevent_readm'\n",
      " 'tot_prevent_readm' 'cardiac_adm' 'cvd_adm' 'resp_adm' 'infxn_adm'\n",
      " 'gu_adm' 'gi_adm' 'endo_adm' 'neuro_adm' 'malignancies_adm'\n",
      " 'fracture_adm' 'thrombosis_adm' 'ibd_specific_adm' 'others_adm'\n",
      " 'ibd_index_discharge_date' 'readmission_time' 'was_readmitted'\n",
      " 'died_in_sixmo' 'did_die_in_sixmo' 'unplanned_in_sixmo'\n",
      " 'did_unplanned_in_sixmo' 'prevent_in_sixmo' 'did_prevent_in_sixmo'\n",
      " 'proc_in_sixmo' 'did_proc_in_sixmo' 'surgery_in_sixmo'\n",
      " 'did_surgery_in_sixmo' 'survtime' 'censor_readm' 'death_time'\n",
      " 'censor_death' 'surgtime' 'censor_surg' 'severe_IBD_hospitalization'\n",
      " 'severetime' 'censor_severe' 'severe_in_sixmo' 'did_severe_in_sixmo'\n",
      " '_st' '_d' '_t' '_t0' '_Iage_group_1' '_Iage_group_2' '_Inew_cc_in_1'\n",
      " '_Inew_cc_in_2' '_Ipayer_2' '_Ipayer_3' '_Ipayer_4' '_Izipinc_qr_2'\n",
      " '_Izipinc_qr_3' '_Izipinc_qr_4']\n"
     ]
    }
   ],
   "source": [
    "# List all of the column names\n",
    "print(df_index.columns.values)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Testing grounds for additional features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Jason\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \n",
      "C:\\Users\\Jason\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:12: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  if sys.path[0] == '':\n",
      "C:\\Users\\Jason\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  app.launch_new_instance()\n"
     ]
    }
   ],
   "source": [
    "# dx_list = []\n",
    "# for x in range (1,26):\n",
    "#     dx_list.append(f'dx{x}')\n",
    "    \n",
    "# steroid use - V5865\n",
    "df_index['steroid_use'] = df_index[['dx1', 'dx2', 'dx3', 'dx4', 'dx5', 'dx6', 'dx7', 'dx8', 'dx9', 'dx10',\n",
    "               'dx11', 'dx12', 'dx13', 'dx14', 'dx15', 'dx16', 'dx17', 'dx18', 'dx19',\n",
    "               'dx20', 'dx21', 'dx22', 'dx23', 'dx24', 'dx25']].isin(['V5865']).any(axis=1).astype(int)\n",
    "# abdominal pain - 78900\n",
    "df_index['abd_pain_adm'] = df_index[['dx1', 'dx2', 'dx3', 'dx4', 'dx5', 'dx6', 'dx7', 'dx8', 'dx9', 'dx10',\n",
    "               'dx11', 'dx12', 'dx13', 'dx14', 'dx15', 'dx16', 'dx17', 'dx18', 'dx19',\n",
    "               'dx20', 'dx21', 'dx22', 'dx23', 'dx24', 'dx25']].isin(['78900']).any(axis=1).astype(int)\n",
    "# acute kidney injury - 5849\n",
    "df_index['aki_adm'] = df_index[['dx1', 'dx2', 'dx3', 'dx4', 'dx5', 'dx6', 'dx7', 'dx8', 'dx9', 'dx10',\n",
    "               'dx11', 'dx12', 'dx13', 'dx14', 'dx15', 'dx16', 'dx17', 'dx18', 'dx19',\n",
    "               'dx20', 'dx21', 'dx22', 'dx23', 'dx24', 'dx25']].isin(['5849']).any(axis=1).astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 323,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Full feature list aphabetically sorted\n",
    "# features_lc = ['abd_pain_adm',\n",
    "#  'age',\n",
    "#  'aki_adm',\n",
    "#  'aweekend',\n",
    "#  'blood_transfusion',\n",
    "#  'cardiac_adm',\n",
    "#  'cc_index',\n",
    "#  'chronic_pain',\n",
    "#  'cm_aids',\n",
    "#  'cm_alcohol',\n",
    "#  'cm_anemdef',\n",
    "#  'cm_arth',\n",
    "#  'cm_bldloss',\n",
    "#  'cm_chf',\n",
    "#  'cm_chrnlung',\n",
    "#  'cm_coag',\n",
    "#  'cm_depress',\n",
    "#  'cm_dm',\n",
    "#  'cm_dmcx',\n",
    "#  'cm_drug',\n",
    "#  'cm_htn_c',\n",
    "#  'cm_hypothy',\n",
    "#  'cm_liver',\n",
    "#  'cm_lymph',\n",
    "#  'cm_lytes',\n",
    "#  'cm_mets',\n",
    "#  'cm_neuro',\n",
    "#  'cm_obese',\n",
    "#  'cm_para',\n",
    "#  'cm_perivasc',\n",
    "#  'cm_psych',\n",
    "#  'cm_pulmcirc',\n",
    "#  'cm_renlfail',\n",
    "#  'cm_smoking',\n",
    "#  'cm_tumor',\n",
    "#  'cm_ulcer',\n",
    "#  'cm_valve',\n",
    "#  'cm_wghtloss',\n",
    "#  'copd',\n",
    "#  'cvd_adm',\n",
    "#  'diabetes',\n",
    "#  'elective',\n",
    "#  'endo_adm',\n",
    "#  'female',\n",
    "#  'fracture_adm',\n",
    "#  'fractures',\n",
    "#  'frailty_risk_category_index',\n",
    "#  'frailty_risk_score',\n",
    "#  'gi_adm',\n",
    "#  'gu_adm',\n",
    "#  'h_contrl',\n",
    "#  'hosp_bedsize',\n",
    "#  'hosp_ur_teach',\n",
    "#  'hosp_urban_rural_location',\n",
    "#  'hosp_urcat4',\n",
    "#  'ibd_procedures',\n",
    "#  'ibd_readm',\n",
    "#  'ibd_specific_adm',\n",
    "#  'ibd_surgery_adm',\n",
    "#  'infxn_adm',\n",
    "#  'los',\n",
    "#  'malignancies_adm',\n",
    "#  'neuro_adm',\n",
    "#  'new_arrhythmia_adm',\n",
    "#  'new_atypicalmyco_adm',\n",
    "#  'new_cardiacarrest_adm',\n",
    "#  'new_cc_index',\n",
    "#  'new_cdiff_adm',\n",
    "#  'new_chf_adm',\n",
    "#  'new_encephalitis_adm',\n",
    "#  'new_endocarditis_adm',\n",
    "#  'new_fungal_adm',\n",
    "#  'new_leishmaniasis_adm',\n",
    "#  'new_listeriosis_adm',\n",
    "#  'new_meningitis_adm',\n",
    "#  'new_mi_adm',\n",
    "#  'new_osteo_adm',\n",
    "#  'new_pcp_adm',\n",
    "#  'new_pneumonia_adm',\n",
    "#  'new_pyelonephritis_adm',\n",
    "#  'new_septicemia_adm',\n",
    "#  'new_tb_adm',\n",
    "#  'new_unstableangina_adm',\n",
    "#  'orproc',\n",
    "#  'others_adm',\n",
    "#  'payer',\n",
    "#  'pq10_dehydrate',\n",
    "#  'pq11_bacterialpna',\n",
    "#  'pq12_uti',\n",
    "#  'pq13_angina',\n",
    "#  'pq14_diabeteswocomp',\n",
    "#  'pq15_asthma',\n",
    "#  'pq16_dm_amputate',\n",
    "#  'pq1_dm_short',\n",
    "#  'pq2_perf_appendix',\n",
    "#  'pq3_dm_long',\n",
    "#  'pq5_copd_asthma',\n",
    "#  'pq7_htn',\n",
    "#  'pq8_chf',\n",
    "#  'prevent_readm',\n",
    "#  'resp_adm',\n",
    "#  'severe_IBD_hospitalization',\n",
    "#  'steroid_use',\n",
    "#  'thromboses',\n",
    "#  'thrombosis_adm',\n",
    "#  'unplanned_adm',\n",
    "#  'zipinc_qrtl']\n",
    "\n",
    "# features_lc = ['abd_pain_adm',\n",
    "#  'age',\n",
    "#  'aki_adm',\n",
    "#  'aweekend',\n",
    "#  'blood_transfusion',\n",
    "#  'cardiac_adm',\n",
    "#  'cc_index',\n",
    "#  'chronic_pain',\n",
    "#  'cm_aids',\n",
    "#  'cm_alcohol',\n",
    "#  'cm_anemdef',\n",
    "#  'cm_arth',\n",
    "#  'cm_bldloss',\n",
    "#  'cm_chf',\n",
    "#  'cm_chrnlung',\n",
    "#  'cm_coag',\n",
    "#  'cm_depress',\n",
    "#  'cm_dm',\n",
    "#  'cm_dmcx',\n",
    "#  'cm_drug',\n",
    "#  'cm_htn_c',\n",
    "#  'cm_hypothy',\n",
    "#  'cm_liver',\n",
    "#  'cm_lymph',\n",
    "#  'cm_lytes',\n",
    "#  'cm_mets',\n",
    "#  'cm_neuro',\n",
    "#  'cm_obese',\n",
    "#  'cm_para',\n",
    "#  'cm_perivasc',\n",
    "#  'cm_psych',\n",
    "#  'cm_pulmcirc',\n",
    "#  'cm_renlfail',\n",
    "#  'cm_smoking',\n",
    "#  'cm_tumor',\n",
    "#  'cm_ulcer',\n",
    "#  'cm_valve',\n",
    "#  'cm_wghtloss',\n",
    "#  'copd',\n",
    "#  'cvd_adm',\n",
    "#  'diabetes',\n",
    "#  'elective',\n",
    "#  'endo_adm',\n",
    "#  'female',\n",
    "#  'fracture_adm',\n",
    "#  'fractures',\n",
    "#  'frailty_risk_category_index',\n",
    "# #  'frailty_risk_score',\n",
    "#  'gi_adm',\n",
    "#  'gu_adm',\n",
    "#  'h_contrl',\n",
    "#  'hosp_bedsize',\n",
    "#  'hosp_ur_teach',\n",
    "#  'hosp_urban_rural_location',\n",
    "#  'hosp_urcat4',\n",
    "#  'ibd_procedures',\n",
    "#  'ibd_readm',\n",
    "#  'ibd_specific_adm',\n",
    "#  'ibd_surgery_adm',\n",
    "#  'infxn_adm',\n",
    "#  'los',\n",
    "#  'malignancies_adm',\n",
    "#  'neuro_adm',\n",
    "#  'new_arrhythmia_adm',\n",
    "#  'new_atypicalmyco_adm',\n",
    "#  'new_cardiacarrest_adm',\n",
    "#  'new_cc_index',\n",
    "#  'new_cdiff_adm',\n",
    "#  'new_chf_adm',\n",
    "#  'new_encephalitis_adm',\n",
    "#  'new_endocarditis_adm',\n",
    "#  'new_fungal_adm',\n",
    "#  'new_leishmaniasis_adm',\n",
    "#  'new_listeriosis_adm',\n",
    "#  'new_meningitis_adm',\n",
    "#  'new_mi_adm',\n",
    "#  'new_osteo_adm',\n",
    "#  'new_pcp_adm',\n",
    "#  'new_pneumonia_adm',\n",
    "#  'new_pyelonephritis_adm',\n",
    "#  'new_septicemia_adm',\n",
    "#  'new_tb_adm',\n",
    "#  'new_unstableangina_adm',\n",
    "#  'orproc',\n",
    "#  'others_adm',\n",
    "#  'payer',\n",
    "#  'pq10_dehydrate',\n",
    "#  'pq11_bacterialpna',\n",
    "#  'pq12_uti',\n",
    "#  'pq13_angina',\n",
    "#  'pq14_diabeteswocomp',\n",
    "#  'pq15_asthma',\n",
    "#  'pq16_dm_amputate',\n",
    "#  'pq1_dm_short',\n",
    "#  'pq2_perf_appendix',\n",
    "#  'pq3_dm_long',\n",
    "#  'pq5_copd_asthma',\n",
    "#  'pq7_htn',\n",
    "#  'pq8_chf',\n",
    "#  'prevent_readm',\n",
    "#  'resp_adm',\n",
    "#  'severe_IBD_hospitalization',\n",
    "#  'steroid_use',\n",
    "#  'thromboses',\n",
    "#  'thrombosis_adm',\n",
    "#  'unplanned_adm',\n",
    "#  'zipinc_qrtl']\n",
    "\n",
    "# Removed commented\n",
    "features_lc = ['abd_pain_adm',\n",
    " 'age',\n",
    " 'aki_adm',\n",
    " 'aweekend',\n",
    " 'blood_transfusion',\n",
    " 'cardiac_adm',\n",
    " 'cc_index',\n",
    " 'chronic_pain',\n",
    " 'cm_aids',\n",
    " 'cm_alcohol',\n",
    " 'cm_anemdef',\n",
    " 'cm_arth',\n",
    " 'cm_bldloss',\n",
    " 'cm_chf',\n",
    " 'cm_chrnlung',\n",
    " 'cm_coag',\n",
    " 'cm_depress',\n",
    " 'cm_dm',\n",
    " 'cm_dmcx',\n",
    " 'cm_drug',\n",
    " 'cm_htn_c',\n",
    " 'cm_hypothy',\n",
    " 'cm_liver',\n",
    " 'cm_lymph',\n",
    " 'cm_lytes',\n",
    " 'cm_mets',\n",
    " 'cm_neuro',\n",
    " 'cm_obese',\n",
    " 'cm_para',\n",
    " 'cm_perivasc',\n",
    " 'cm_psych',\n",
    " 'cm_pulmcirc',\n",
    " 'cm_renlfail',\n",
    " 'cm_smoking',\n",
    " 'cm_tumor',\n",
    " 'cm_ulcer',\n",
    " 'cm_valve',\n",
    " 'cm_wghtloss',\n",
    " 'copd',\n",
    " 'cvd_adm',\n",
    " 'diabetes',\n",
    " 'elective',\n",
    " 'endo_adm',\n",
    " 'female',\n",
    " 'fracture_adm',\n",
    " 'fractures',\n",
    " 'frailty_risk_category_index',\n",
    " 'gi_adm',\n",
    " 'gu_adm',\n",
    " 'h_contrl',\n",
    " 'hosp_bedsize',\n",
    " 'hosp_ur_teach',\n",
    " 'hosp_urban_rural_location',\n",
    " 'hosp_urcat4',\n",
    " 'ibd_procedures',\n",
    " 'ibd_readm',\n",
    " 'ibd_specific_adm',\n",
    " 'ibd_surgery_adm',\n",
    " 'infxn_adm',\n",
    " 'los',\n",
    " 'malignancies_adm',\n",
    " 'neuro_adm',\n",
    " 'new_arrhythmia_adm',\n",
    " 'new_atypicalmyco_adm',\n",
    " 'new_cardiacarrest_adm',\n",
    " 'new_cc_index',\n",
    " 'new_cdiff_adm',\n",
    " 'new_chf_adm',\n",
    " 'new_encephalitis_adm',\n",
    " 'new_endocarditis_adm',\n",
    " 'new_fungal_adm',\n",
    " 'new_leishmaniasis_adm',\n",
    " 'new_listeriosis_adm',\n",
    " 'new_meningitis_adm',\n",
    " 'new_mi_adm',\n",
    " 'new_osteo_adm',\n",
    " 'new_pcp_adm',\n",
    " 'new_pneumonia_adm',\n",
    " 'new_pyelonephritis_adm',\n",
    " 'new_septicemia_adm',\n",
    " 'new_tb_adm',\n",
    " 'new_unstableangina_adm',\n",
    " 'orproc',\n",
    " 'others_adm',\n",
    " 'payer',\n",
    " 'pq10_dehydrate',\n",
    " 'pq11_bacterialpna',\n",
    " 'pq12_uti',\n",
    " 'pq13_angina',\n",
    " 'pq14_diabeteswocomp',\n",
    " 'pq15_asthma',\n",
    " 'pq16_dm_amputate',\n",
    " 'pq1_dm_short',\n",
    " 'pq2_perf_appendix',\n",
    " 'pq3_dm_long',\n",
    " 'pq5_copd_asthma',\n",
    " 'pq7_htn',\n",
    " 'pq8_chf',\n",
    " 'prevent_readm',\n",
    " 'resp_adm',\n",
    " 'severe_IBD_hospitalization',\n",
    " 'steroid_use',\n",
    " 'thromboses',\n",
    " 'thrombosis_adm',\n",
    " 'unplanned_adm',\n",
    " 'zipinc_qrtl']\n",
    "\n",
    "# features_lc = ['ibd_readm','age', 'frailty_risk_score', 'los', 'zipinc_qrtl', 'payer', 'hosp_bedsize', 'h_contrl', 'hosp_urcat4', 'hosp_ur_teach', 'cc_index', 'female', 'cm_htn_c', 'ibd_procedures', 'cm_smoking', 'aweekend', 'ibd_specific_adm', 'diabetes', 'cm_depress', 'orproc', 'thromboses']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 324,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abd_pain_adm</th>\n",
       "      <th>age</th>\n",
       "      <th>aki_adm</th>\n",
       "      <th>aweekend</th>\n",
       "      <th>blood_transfusion</th>\n",
       "      <th>cardiac_adm</th>\n",
       "      <th>cc_index</th>\n",
       "      <th>chronic_pain</th>\n",
       "      <th>cm_aids</th>\n",
       "      <th>cm_alcohol</th>\n",
       "      <th>...</th>\n",
       "      <th>pq7_htn</th>\n",
       "      <th>pq8_chf</th>\n",
       "      <th>prevent_readm</th>\n",
       "      <th>resp_adm</th>\n",
       "      <th>severe_IBD_hospitalization</th>\n",
       "      <th>steroid_use</th>\n",
       "      <th>thromboses</th>\n",
       "      <th>thrombosis_adm</th>\n",
       "      <th>unplanned_adm</th>\n",
       "      <th>zipinc_qrtl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>89</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94491</th>\n",
       "      <td>0</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94492</th>\n",
       "      <td>0</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94493</th>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94496</th>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94497</th>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>47402 rows × 106 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       abd_pain_adm  age  aki_adm  aweekend  blood_transfusion  cardiac_adm  \\\n",
       "0                 0   89        0         1                  0            0   \n",
       "3                 0   48        0         0                  0            0   \n",
       "4                 0   65        0         0                  0            0   \n",
       "9                 0   51        0         0                  0            0   \n",
       "10                0   22        0         0                  0            0   \n",
       "...             ...  ...      ...       ...                ...          ...   \n",
       "94491             0   32        0         1                  0            0   \n",
       "94492             0   54        0         0                  0            0   \n",
       "94493             0   44        0         0                  1            0   \n",
       "94496             0   52        0         0                  0            0   \n",
       "94497             0   72        1         1                  0            0   \n",
       "\n",
       "       cc_index  chronic_pain  cm_aids  cm_alcohol  ...  pq7_htn  pq8_chf  \\\n",
       "0             2             0        0           0  ...        0        0   \n",
       "3             0             0        0           0  ...        0        0   \n",
       "4             0             0        0           0  ...        0        0   \n",
       "9             0             0        0           0  ...        0        0   \n",
       "10            0             0        0           0  ...        0        0   \n",
       "...         ...           ...      ...         ...  ...      ...      ...   \n",
       "94491         0             0        0           0  ...        0        0   \n",
       "94492         0             0        0           0  ...        0        0   \n",
       "94493         0             0        0           0  ...        0        0   \n",
       "94496         2             0        0           0  ...        0        0   \n",
       "94497         1             0        0           0  ...        0        0   \n",
       "\n",
       "       prevent_readm  resp_adm  severe_IBD_hospitalization  steroid_use  \\\n",
       "0                  0         0                           0            0   \n",
       "3                  0         0                           0            0   \n",
       "4                  0         0                           0            0   \n",
       "9                  0         0                           0            0   \n",
       "10                 0         0                           0            0   \n",
       "...              ...       ...                         ...          ...   \n",
       "94491              0         0                           0            0   \n",
       "94492              0         0                           0            0   \n",
       "94493              0         0                           1            0   \n",
       "94496              0         0                           0            0   \n",
       "94497              0         0                           0            0   \n",
       "\n",
       "       thromboses  thrombosis_adm  unplanned_adm  zipinc_qrtl  \n",
       "0               0               0            1.0          4.0  \n",
       "3               0               0            0.0          3.0  \n",
       "4               0               0            1.0          2.0  \n",
       "9               0               0            1.0          4.0  \n",
       "10              0               0            0.0          2.0  \n",
       "...           ...             ...            ...          ...  \n",
       "94491           0               0            1.0          4.0  \n",
       "94492           0               0            0.0          4.0  \n",
       "94493           0               0            0.0          4.0  \n",
       "94496           0               0            0.0          1.0  \n",
       "94497           0               0            1.0          2.0  \n",
       "\n",
       "[47402 rows x 106 columns]"
      ]
     },
     "execution_count": 324,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the back end of the data\n",
    "df_import = df_index[features_lc]\n",
    "df_import"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 325,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abd_pain_adm</th>\n",
       "      <th>age</th>\n",
       "      <th>aki_adm</th>\n",
       "      <th>aweekend</th>\n",
       "      <th>blood_transfusion</th>\n",
       "      <th>cardiac_adm</th>\n",
       "      <th>cc_index</th>\n",
       "      <th>chronic_pain</th>\n",
       "      <th>cm_aids</th>\n",
       "      <th>cm_alcohol</th>\n",
       "      <th>...</th>\n",
       "      <th>pq7_htn</th>\n",
       "      <th>pq8_chf</th>\n",
       "      <th>prevent_readm</th>\n",
       "      <th>resp_adm</th>\n",
       "      <th>severe_IBD_hospitalization</th>\n",
       "      <th>steroid_use</th>\n",
       "      <th>thromboses</th>\n",
       "      <th>thrombosis_adm</th>\n",
       "      <th>unplanned_adm</th>\n",
       "      <th>zipinc_qrtl</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ibd_readm</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>...</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27778</td>\n",
       "      <td>27749</td>\n",
       "      <td>27371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>...</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19624</td>\n",
       "      <td>19607</td>\n",
       "      <td>19314</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 105 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           abd_pain_adm    age  aki_adm  aweekend  blood_transfusion  \\\n",
       "ibd_readm                                                              \n",
       "0                 27778  27778    27778     27778              27778   \n",
       "1                 19624  19624    19624     19624              19624   \n",
       "\n",
       "           cardiac_adm  cc_index  chronic_pain  cm_aids  cm_alcohol  ...  \\\n",
       "ibd_readm                                                            ...   \n",
       "0                27778     27778         27778    27778       27778  ...   \n",
       "1                19624     19624         19624    19624       19624  ...   \n",
       "\n",
       "           pq7_htn  pq8_chf  prevent_readm  resp_adm  \\\n",
       "ibd_readm                                              \n",
       "0            27778    27778          27778     27778   \n",
       "1            19624    19624          19624     19624   \n",
       "\n",
       "           severe_IBD_hospitalization  steroid_use  thromboses  \\\n",
       "ibd_readm                                                        \n",
       "0                               27778        27778       27778   \n",
       "1                               19624        19624       19624   \n",
       "\n",
       "           thrombosis_adm  unplanned_adm  zipinc_qrtl  \n",
       "ibd_readm                                              \n",
       "0                   27778          27749        27371  \n",
       "1                   19624          19607        19314  \n",
       "\n",
       "[2 rows x 105 columns]"
      ]
     },
     "execution_count": 325,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Ensure that ibd_readm has both 0 (not readmitted) and 1 (readmitted)\n",
    "df_import.groupby('ibd_readm').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "abd_pain_adm           0\n",
       "age                    0\n",
       "aki_adm                0\n",
       "aweekend               0\n",
       "blood_transfusion      0\n",
       "                    ... \n",
       "steroid_use            0\n",
       "thromboses             0\n",
       "thrombosis_adm         0\n",
       "unplanned_adm         46\n",
       "zipinc_qrtl          717\n",
       "Length: 106, dtype: int64"
      ]
     },
     "execution_count": 326,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_import.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abd_pain_adm</th>\n",
       "      <th>age</th>\n",
       "      <th>aki_adm</th>\n",
       "      <th>aweekend</th>\n",
       "      <th>blood_transfusion</th>\n",
       "      <th>cardiac_adm</th>\n",
       "      <th>cc_index</th>\n",
       "      <th>chronic_pain</th>\n",
       "      <th>cm_aids</th>\n",
       "      <th>cm_alcohol</th>\n",
       "      <th>...</th>\n",
       "      <th>pq7_htn</th>\n",
       "      <th>pq8_chf</th>\n",
       "      <th>prevent_readm</th>\n",
       "      <th>resp_adm</th>\n",
       "      <th>severe_IBD_hospitalization</th>\n",
       "      <th>steroid_use</th>\n",
       "      <th>thromboses</th>\n",
       "      <th>thrombosis_adm</th>\n",
       "      <th>unplanned_adm</th>\n",
       "      <th>zipinc_qrtl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>89</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94491</th>\n",
       "      <td>0</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94492</th>\n",
       "      <td>0</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94493</th>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94496</th>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94497</th>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>46586 rows × 105 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       abd_pain_adm  age  aki_adm  aweekend  blood_transfusion  cardiac_adm  \\\n",
       "0                 0   89        0         1                  0            0   \n",
       "3                 0   48        0         0                  0            0   \n",
       "4                 0   65        0         0                  0            0   \n",
       "9                 0   51        0         0                  0            0   \n",
       "10                0   22        0         0                  0            0   \n",
       "...             ...  ...      ...       ...                ...          ...   \n",
       "94491             0   32        0         1                  0            0   \n",
       "94492             0   54        0         0                  0            0   \n",
       "94493             0   44        0         0                  1            0   \n",
       "94496             0   52        0         0                  0            0   \n",
       "94497             0   72        1         1                  0            0   \n",
       "\n",
       "       cc_index  chronic_pain  cm_aids  cm_alcohol  ...  pq7_htn  pq8_chf  \\\n",
       "0             2             0        0           0  ...        0        0   \n",
       "3             0             0        0           0  ...        0        0   \n",
       "4             0             0        0           0  ...        0        0   \n",
       "9             0             0        0           0  ...        0        0   \n",
       "10            0             0        0           0  ...        0        0   \n",
       "...         ...           ...      ...         ...  ...      ...      ...   \n",
       "94491         0             0        0           0  ...        0        0   \n",
       "94492         0             0        0           0  ...        0        0   \n",
       "94493         0             0        0           0  ...        0        0   \n",
       "94496         2             0        0           0  ...        0        0   \n",
       "94497         1             0        0           0  ...        0        0   \n",
       "\n",
       "       prevent_readm  resp_adm  severe_IBD_hospitalization  steroid_use  \\\n",
       "0                  0         0                           0            0   \n",
       "3                  0         0                           0            0   \n",
       "4                  0         0                           0            0   \n",
       "9                  0         0                           0            0   \n",
       "10                 0         0                           0            0   \n",
       "...              ...       ...                         ...          ...   \n",
       "94491              0         0                           0            0   \n",
       "94492              0         0                           0            0   \n",
       "94493              0         0                           1            0   \n",
       "94496              0         0                           0            0   \n",
       "94497              0         0                           0            0   \n",
       "\n",
       "       thromboses  thrombosis_adm  unplanned_adm  zipinc_qrtl  \n",
       "0               0               0            1.0          4.0  \n",
       "3               0               0            0.0          3.0  \n",
       "4               0               0            1.0          2.0  \n",
       "9               0               0            1.0          4.0  \n",
       "10              0               0            0.0          2.0  \n",
       "...           ...             ...            ...          ...  \n",
       "94491           0               0            1.0          4.0  \n",
       "94492           0               0            0.0          4.0  \n",
       "94493           0               0            0.0          4.0  \n",
       "94496           0               0            0.0          1.0  \n",
       "94497           0               0            1.0          2.0  \n",
       "\n",
       "[46586 rows x 105 columns]"
      ]
     },
     "execution_count": 327,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Drop na values from the dataframe and drop the output column ('ibd_readm')\n",
    "data = df_import.dropna().drop(columns=['ibd_readm'])\n",
    "data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Scale the non-binary data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "abd_pain_adm         46586\n",
       "age                  46586\n",
       "aki_adm              46586\n",
       "aweekend             46586\n",
       "blood_transfusion    46586\n",
       "                     ...  \n",
       "steroid_use          46586\n",
       "thromboses           46586\n",
       "thrombosis_adm       46586\n",
       "unplanned_adm        46586\n",
       "zipinc_qrtl          46586\n",
       "Length: 105, dtype: int64"
      ]
     },
     "execution_count": 329,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the columns where there are null or missing values\n",
    "data.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Feature names\n",
    "feature_names = features_lc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 0], dtype=int64)"
      ]
     },
     "execution_count": 331,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Identify outcome variable - ibd_readm. It must be converted to 'int64' type in order to be used by the model\n",
    "target = df_import.dropna()['ibd_readm']\n",
    "target = target.astype('int64')\n",
    "target.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Change one of the variables\n",
    "\n",
    "# from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# # Step 1: Label-encode data set\n",
    "# label_encoder = LabelEncoder()\n",
    "# label_encoder.fit(y)\n",
    "# encoded_y = label_encoder.transform(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 333,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set up training and testing datasets\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(data, target, random_state=45)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Scale the X data\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "X_scaler = MinMaxScaler().fit(X_train)\n",
    "X_train_scaled = X_scaler.transform(X_train)\n",
    "X_test_scaled = X_scaler.transform(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Export to csv\n",
    "data.to_csv('check.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.53991046541093"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Build the random forrest classifier\n",
    "\n",
    "clf = tree.DecisionTreeClassifier()\n",
    "clf = clf.fit(X_train, y_train)\n",
    "clf.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training Accuracy: 0.6841638283866167\n",
      "Testing Accuracy: 0.6090838842620417\n"
     ]
    }
   ],
   "source": [
    "# Fit the model on the test dataset and evaluate the output\n",
    "\n",
    "# from sklearn.ensemble import RandomForestClassifier\n",
    "# rf = RandomForestClassifier(n_estimators=200, max_depth = 10)\n",
    "# rf = rf.fit(X_train, y_train)\n",
    "# training_acc = rf.score(X_train, y_train)\n",
    "# testing_acc = rf.score(X_test, y_test)\n",
    "\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "rf = RandomForestClassifier(n_estimators=200, max_depth = 10)\n",
    "rf = rf.fit(X_train, y_train)\n",
    "training_acc = rf.score(X_train, y_train)\n",
    "testing_acc = rf.score(X_test, y_test)\n",
    "\n",
    "print(f'Training Accuracy: {training_acc}')\n",
    "print(f'Testing Accuracy: {testing_acc}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.61418759 0.61339487 0.61253622 0.61264355 0.61554148]\n",
      "Average score: 0.6136607451412706, Stdev: 0.001112174379263536\n"
     ]
    }
   ],
   "source": [
    "import sklearn\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn import metrics\n",
    "scores = cross_val_score(rf, data, target, cv=5, scoring='accuracy')\n",
    "print(scores)\n",
    "print(f\"Average score: {scores.mean()}, Stdev: {scores.std()}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(0.10973396814560513, 'infxn_adm'),\n",
       " (0.06986501497318055, 'others_adm'),\n",
       " (0.06694168769963732, 'age'),\n",
       " (0.055747944502088066, 'cc_index'),\n",
       " (0.04611337981578196, 'new_cardiacarrest_adm'),\n",
       " (0.030423159924272223, 'new_unstableangina_adm'),\n",
       " (0.02944174905822617, 'resp_adm'),\n",
       " (0.024885357774548585, 'cm_anemdef'),\n",
       " (0.02084636000685079, 'frailty_risk_category_index'),\n",
       " (0.020705441805477596, 'unplanned_adm'),\n",
       " (0.01760470888068524, 'elective'),\n",
       " (0.017377374485406202, 'ibd_readm'),\n",
       " (0.016542009978673618, 'thrombosis_adm'),\n",
       " (0.015904111553031723, 'ibd_procedures'),\n",
       " (0.015023935397417284, 'severe_IBD_hospitalization'),\n",
       " (0.014490553611771664, 'hosp_urcat4'),\n",
       " (0.014064310142711912, 'hosp_ur_teach'),\n",
       " (0.01405535226205044, 'hosp_bedsize'),\n",
       " (0.013935699930133777, 'steroid_use'),\n",
       " (0.01388222956697305, 'chronic_pain'),\n",
       " (0.01330634497363769, 'h_contrl'),\n",
       " (0.012761745176330958, 'cm_renlfail'),\n",
       " (0.012151938037096948, 'cm_drug'),\n",
       " (0.011797358371585168, 'cm_wghtloss'),\n",
       " (0.011261567952543815, 'cm_depress'),\n",
       " (0.010653377437287772, 'cm_lytes'),\n",
       " (0.010423831970909288, 'cm_smoking'),\n",
       " (0.010388515448669764, 'cm_neuro'),\n",
       " (0.010107644989635156, 'new_pyelonephritis_adm'),\n",
       " (0.00995614669702123, 'female'),\n",
       " (0.009793796656754866, 'blood_transfusion'),\n",
       " (0.009491231015813001, 'cm_chrnlung'),\n",
       " (0.00928582728707322, 'copd'),\n",
       " (0.008955308741822265, 'cm_psych'),\n",
       " (0.008677323824785555, 'cm_htn_c'),\n",
       " (0.008562631015049223, 'diabetes'),\n",
       " (0.008419543280096484, 'aweekend'),\n",
       " (0.008016086887101245, 'ibd_surgery_adm'),\n",
       " (0.0074122641937742675, 'aki_adm'),\n",
       " (0.006927847100826469, 'cm_dmcx'),\n",
       " (0.006659149098415449, 'cm_obese'),\n",
       " (0.006623656924317572, 'cm_hypothy'),\n",
       " (0.006596204356215748, 'cm_chf'),\n",
       " (0.00643551973483164, 'cm_dm'),\n",
       " (0.006407576922308375, 'cm_coag'),\n",
       " (0.0061336977346091994, 'new_cc_index'),\n",
       " (0.006103238575661507, 'gi_adm'),\n",
       " (0.006005737027331833, 'pq8_chf'),\n",
       " (0.005456176399655131, 'cm_arth'),\n",
       " (0.005415024835244873, 'abd_pain_adm'),\n",
       " (0.005392835909960365, 'neuro_adm'),\n",
       " (0.005194562013847745, 'hosp_urban_rural_location'),\n",
       " (0.005029816133890914, 'prevent_readm'),\n",
       " (0.005022571828602508, 'cm_perivasc'),\n",
       " (0.00497833246364566, 'cm_liver'),\n",
       " (0.004836044791866179, 'cm_valve'),\n",
       " (0.004513147368864486, 'new_cdiff_adm'),\n",
       " (0.004166392767411728, 'cardiac_adm'),\n",
       " (0.00413142834122008, 'cm_alcohol'),\n",
       " (0.003942588490574991, 'cm_pulmcirc'),\n",
       " (0.0038052821128479507, 'fractures'),\n",
       " (0.003777593711450184, 'cm_bldloss'),\n",
       " (0.0036329530116801755, 'cm_para'),\n",
       " (0.0035201415583888244, 'gu_adm'),\n",
       " (0.0032570543926089433, 'endo_adm'),\n",
       " (0.003227305638580033, 'cm_tumor'),\n",
       " (0.0032210822324181118, 'cm_mets'),\n",
       " (0.0029652372220274393, 'orproc'),\n",
       " (0.002899890556660917, 'pq3_dm_long'),\n",
       " (0.0028460309428699967, 'los'),\n",
       " (0.0027216595151499097, 'fracture_adm'),\n",
       " (0.0024809401201973907, 'pq10_dehydrate'),\n",
       " (0.0022920758098053814, 'cm_lymph'),\n",
       " (0.0022428475788481015, 'payer'),\n",
       " (0.002099617622852151, 'new_meningitis_adm'),\n",
       " (0.00208912995869563, 'malignancies_adm'),\n",
       " (0.0019985862885393774, 'pq11_bacterialpna'),\n",
       " (0.0017801593697046808, 'pq7_htn'),\n",
       " (0.0017407475221196571, 'thromboses'),\n",
       " (0.001600878292809089, 'new_mi_adm'),\n",
       " (0.0015357590172776574, 'pq2_perf_appendix'),\n",
       " (0.0013762302222921866, 'pq14_diabeteswocomp'),\n",
       " (0.0011601657650859068, 'new_pcp_adm'),\n",
       " (0.0010357477712952098, 'new_atypicalmyco_adm'),\n",
       " (0.0010110792567787385, 'pq16_dm_amputate'),\n",
       " (0.0009007769708430809, 'pq5_copd_asthma'),\n",
       " (0.0006028406480226348, 'new_pneumonia_adm'),\n",
       " (0.0005821776344400111, 'new_tb_adm'),\n",
       " (0.0005183396301768649, 'cm_aids'),\n",
       " (0.0004318681074399997, 'pq1_dm_short'),\n",
       " (0.0003195869704058374, 'cm_ulcer'),\n",
       " (0.0003094276321957601, 'new_endocarditis_adm'),\n",
       " (0.00027978210078357063, 'pq15_asthma'),\n",
       " (0.0002221792107476281, 'pq13_angina'),\n",
       " (0.00011920166658545781, 'new_encephalitis_adm'),\n",
       " (0.00010631915913448934, 'pq12_uti'),\n",
       " (8.041937571843669e-05, 'new_listeriosis_adm'),\n",
       " (7.220068618982299e-05, 'new_septicemia_adm'),\n",
       " (5.910161892726442e-05, 'new_arrhythmia_adm'),\n",
       " (5.794083797721707e-05, 'new_chf_adm'),\n",
       " (2.392765771857935e-05, 'new_osteo_adm'),\n",
       " (1.7332310895853982e-05, 'new_leishmaniasis_adm'),\n",
       " (0.0, 'new_fungal_adm'),\n",
       " (0.0, 'ibd_specific_adm'),\n",
       " (0.0, 'cvd_adm')]"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Evaluate the features of the model\n",
    "\n",
    "sorted(zip(rf.feature_importances_, feature_names), reverse=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'graphviz'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-90-53b72b84b971>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mtree\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[1;32mimport\u001b[0m \u001b[0mgraphviz\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      3\u001b[0m dot_data = tree.export_graphviz(clf, out_file=None, \n\u001b[0;32m      4\u001b[0m                   \u001b[0mfeature_names\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mnew_feature_names\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m                       \u001b[0mclass_names\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mtarget_names\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'graphviz'"
     ]
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "import graphviz \n",
    "dot_data = tree.export_graphviz(clf, out_file=None, \n",
    "                  feature_names=new_feature_names,  \n",
    "                      class_names=target_names,  \n",
    "                      filled=True, rounded=True)  \n",
    "#                      special_characters=False)\n",
    "\n",
    "graph = graphviz.Source(dot_data)  \n",
    "graph "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "# from sklearn.svm import SVC \n",
    "# model = SVC(kernel='linear')\n",
    "# model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## XGBClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 334,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:08:35] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# XGBClassifier\n",
    "from sklearn import  metrics, model_selection\n",
    "from xgboost.sklearn import XGBClassifier\n",
    "\n",
    "params = {\n",
    "    'objective': 'binary:logistic',\n",
    "    'max_depth': 3,\n",
    "    'learning_rate': 0.2,\n",
    "    'silent': 1.0,\n",
    "    'n_estimators': 125,\n",
    "    'min_child_weight': 0.68,\n",
    "    'gamma': 2.5\n",
    "}\n",
    "\n",
    "model = XGBClassifier(**params).fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Misclassified samples: 4423\n",
      "Accuracy: 0.6202\n"
     ]
    }
   ],
   "source": [
    "##### use the model to make predictions with the test data\n",
    "y_pred = model.predict(X_test)\n",
    "# how did our model perform?\n",
    "count_misclassified = (y_test != y_pred).sum()\n",
    "print('Misclassified samples: {}'.format(count_misclassified))\n",
    "accuracy = metrics.accuracy_score(y_test, y_pred)\n",
    "print('Accuracy: {:.4f}'.format(accuracy))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10:08:38] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:39] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:41] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:42] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:44] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:45] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:47] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:48] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:50] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[10:08:51] WARNING: C:\\Users\\Administrator\\workspace\\xgboost-win64_release_1.2.0\\src\\learner.cc:516: \n",
      "Parameters: { silent } might not be used.\n",
      "\n",
      "  This may not be accurate due to some parameters are only used in language bindings but\n",
      "  passed down to XGBoost core.  Or some parameters are not used but slip through this\n",
      "  verification. Please open an issue if you find above cases.\n",
      "\n",
      "\n",
      "[0.6164413  0.62416828 0.62459755 0.62330972 0.61193389 0.62288045\n",
      " 0.61421211 0.6281666  0.63095749 0.62194075]\n",
      "Average score: 0.6218608129843936, Stdev: 0.0056999087692801535\n"
     ]
    }
   ],
   "source": [
    "import sklearn\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn import metrics\n",
    "scores = cross_val_score(model, data, target, cv=10, scoring='accuracy')\n",
    "print(scores)\n",
    "print(f\"Average score: {scores.mean()}, Stdev: {scores.std()}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(0.0766258, 'others_adm'),\n",
       " (0.048308518, 'new_unstableangina_adm'),\n",
       " (0.045773383, 'infxn_adm'),\n",
       " (0.044999182, 'cc_index'),\n",
       " (0.029385585, 'cm_anemdef'),\n",
       " (0.028122025, 'chronic_pain'),\n",
       " (0.026905, 'severe_IBD_hospitalization'),\n",
       " (0.026055796, 'cm_drug'),\n",
       " (0.02595986, 'ibd_readm'),\n",
       " (0.023116179, 'steroid_use'),\n",
       " (0.020412054, 'elective'),\n",
       " (0.020400696, 'ibd_procedures'),\n",
       " (0.020333841, 'new_pyelonephritis_adm'),\n",
       " (0.017730335, 'age'),\n",
       " (0.017618518, 'frailty_risk_category_index'),\n",
       " (0.015784234, 'copd'),\n",
       " (0.015536039, 'cm_smoking'),\n",
       " (0.015223821, 'cm_wghtloss'),\n",
       " (0.014813482, 'cm_psych'),\n",
       " (0.014789289, 'cm_dmcx'),\n",
       " (0.014494723, 'cm_depress'),\n",
       " (0.013095281, 'cm_renlfail'),\n",
       " (0.013070357, 'abd_pain_adm'),\n",
       " (0.012734623, 'cm_perivasc'),\n",
       " (0.0117751565, 'cm_neuro'),\n",
       " (0.011722383, 'ibd_surgery_adm'),\n",
       " (0.011656133, 'hosp_urcat4'),\n",
       " (0.01135129, 'new_cc_index'),\n",
       " (0.01130888, 'cm_coag'),\n",
       " (0.011085403, 'aki_adm'),\n",
       " (0.010785778, 'blood_transfusion'),\n",
       " (0.010780344, 'cm_lytes'),\n",
       " (0.010670909, 'pq3_dm_long'),\n",
       " (0.010418849, 'cm_tumor'),\n",
       " (0.009983933, 'endo_adm'),\n",
       " (0.0098464945, 'prevent_readm'),\n",
       " (0.009784786, 'pq5_copd_asthma'),\n",
       " (0.009750173, 'hosp_bedsize'),\n",
       " (0.009623184, 'new_cdiff_adm'),\n",
       " (0.0092596905, 'pq7_htn'),\n",
       " (0.009235068, 'hosp_ur_teach'),\n",
       " (0.009172291, 'orproc'),\n",
       " (0.009170854, 'los'),\n",
       " (0.00903338, 'pq11_bacterialpna'),\n",
       " (0.008814369, 'cm_bldloss'),\n",
       " (0.00866522, 'cm_valve'),\n",
       " (0.008635753, 'new_atypicalmyco_adm'),\n",
       " (0.008485078, 'unplanned_adm'),\n",
       " (0.0081687905, 'cm_hypothy'),\n",
       " (0.007956047, 'cm_obese'),\n",
       " (0.0074373963, 'h_contrl'),\n",
       " (0.0072439425, 'pq8_chf'),\n",
       " (0.007213944, 'aweekend'),\n",
       " (0.007149304, 'cm_arth'),\n",
       " (0.007148214, 'fractures'),\n",
       " (0.0071030688, 'cm_htn_c'),\n",
       " (0.007083651, 'cm_lymph'),\n",
       " (0.0070246505, 'cm_pulmcirc'),\n",
       " (0.0068202284, 'cm_dm'),\n",
       " (0.006646849, 'pq16_dm_amputate'),\n",
       " (0.0066344775, 'gi_adm'),\n",
       " (0.00638175, 'neuro_adm'),\n",
       " (0.006259731, 'new_pcp_adm'),\n",
       " (0.0062209065, 'cardiac_adm'),\n",
       " (0.0054286798, 'female'),\n",
       " (0.005333557, 'cm_chf'),\n",
       " (0.005070507, 'thromboses'),\n",
       " (0.005064, 'cm_chrnlung'),\n",
       " (0.0047560935, 'pq2_perf_appendix'),\n",
       " (0.004530322, 'new_mi_adm'),\n",
       " (0.0044481107, 'pq13_angina'),\n",
       " (0.0037259248, 'pq15_asthma'),\n",
       " (0.0027736458, 'malignancies_adm'),\n",
       " (0.0025472802, 'cm_aids'),\n",
       " (0.0015249121, 'gu_adm'),\n",
       " (0.0, 'thrombosis_adm'),\n",
       " (0.0, 'resp_adm'),\n",
       " (0.0, 'pq1_dm_short'),\n",
       " (0.0, 'pq14_diabeteswocomp'),\n",
       " (0.0, 'pq12_uti'),\n",
       " (0.0, 'pq10_dehydrate'),\n",
       " (0.0, 'payer'),\n",
       " (0.0, 'new_tb_adm'),\n",
       " (0.0, 'new_septicemia_adm'),\n",
       " (0.0, 'new_pneumonia_adm'),\n",
       " (0.0, 'new_osteo_adm'),\n",
       " (0.0, 'new_meningitis_adm'),\n",
       " (0.0, 'new_listeriosis_adm'),\n",
       " (0.0, 'new_leishmaniasis_adm'),\n",
       " (0.0, 'new_fungal_adm'),\n",
       " (0.0, 'new_endocarditis_adm'),\n",
       " (0.0, 'new_encephalitis_adm'),\n",
       " (0.0, 'new_chf_adm'),\n",
       " (0.0, 'new_cardiacarrest_adm'),\n",
       " (0.0, 'new_arrhythmia_adm'),\n",
       " (0.0, 'ibd_specific_adm'),\n",
       " (0.0, 'hosp_urban_rural_location'),\n",
       " (0.0, 'fracture_adm')]"
      ]
     },
     "execution_count": 275,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Important features\n",
    "sorted(zip(model.feature_importances_, feature_names), reverse=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Generating a heatmap\n",
    "\n",
    "# Correlation matrix\n",
    "corrMatrix = data.corr()\n",
    "\n",
    "import seaborn as sn\n",
    "import matplotlib.pyplot as plt\n",
    "fig, ax = plt.subplots(figsize=(20,20))         # Sample figsize in inches\n",
    "sn.heatmap(corrMatrix, annot=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "learning_rate = np.arange(0.1, 0.5, 0.05)\n",
    "min_child_weight = [0.68]\n",
    "gamma = np.arange(1.0, 3.0, 0.1)\n",
    "\n",
    "#     'learning_rate': 0.2,\n",
    "#     'silent': 1.0,\n",
    "#     'n_estimators': 125,\n",
    "#     'min_child_weight': 0.68,\n",
    "#     'gamma': 2.5\n",
    "\n",
    "# gamma = range(1,3,1)\n",
    "# tree_method = ['approx', 'exact', 'gpu_hist', 'auto']\n",
    "\n",
    "param_grid =dict(min_child_weight = min_child_weight, gamma = gamma, learning_rate = learning_rate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "rf_gridded = GridSearchCV(model, param_grid, verbose=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rf_gridded.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(f\"Best parameters: {rf_gridded.best_params_}\")\n",
    "print(f\"Best score: {rf_gridded.best_score_}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# new column for abdominal pain\n",
    "\n",
    "# abdominal_pain = []\n",
    "\n",
    "# for index, row in df.iterrows():\n",
    "#     if row['dx1'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx2'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx3'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx4'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx5'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx6'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx7'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx8'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx9'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx10'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx11'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx12'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx13'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx14'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx15'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx16'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx17'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx18'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx19'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx20'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx21'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx22'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx23'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx24'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     elif row['dx25'] == '78900':\n",
    "#         abdominal_pain.append(1)\n",
    "#     else:\n",
    "#         abdominal_pain.append(0)\n",
    "        \n",
    "\n",
    "# print(abdominal_pain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# df['abdominal_pain'] = abdominal_pain\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.groupby('abdominal_pain').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "abdominal_pain[0:30]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
